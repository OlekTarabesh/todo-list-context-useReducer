{"ast":null,"code":"var _jsxFileName = \"/Users/olek/Desktop/Coding/todo-list-with-context/src/components/list-of-todos/ListOfTodos.jsx\",\n  _s = $RefreshSig$();\nimport React, { ChangeEvent, KeyboardEvent, useEffect, useRef, useState, useContext } from \"react\";\nimport Checkbox from \"../buttons-components/checkbox/Checkbox\";\nimport EditTask from \"../buttons-components/edit-task/EditTask\";\nimport Trash from \"../buttons-components/trash-basket/Trash\";\nimport Ok from \"../buttons-components/ok-btn/Ok\";\nimport Cross from \"../buttons-components/cross-btn/Cross\";\nimport styled from \"./list-of-todos.module.css\";\nimport { ListOfTodosContext } from \"../../contexts/ListOfTodos.context\";\n\n// type ListOfTodosPropsType = {\n// \tid: string;\n// \ttitle: string;\n// \tisDone: boolean;\n// \tchecked: boolean;\n// \tfilter: string;\n// \tremoveTask: (id: string) => void;\n// \tonChange: (e: ChangeEvent<HTMLInputElement>) => void;\n// \teditTodo: (id: string, title: string) => void;\n// \tonChangeHandler: (e: ChangeEvent<HTMLInputElement>) => void;\n// \tonKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void;\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListOfTodos = _ref => {\n  _s();\n  let {\n    title,\n    id,\n    isDone,\n    checked,\n    onChangeHandler\n  } = _ref;\n  const {\n    onKeyPressHandler,\n    editTodo,\n    removeTask,\n    editTask,\n    setEditTask,\n    editTaskInputRef\n  } = useContext(ListOfTodosContext);\n  const [value, setValue] = useState(title);\n  const [error, setError] = useState(false);\n  const onKeyDownHandler = e => {\n    if (e.key === 'Enter' && value) {\n      editTodo(id, value);\n      setEditTask(false);\n    } else {\n      setError(true);\n    }\n  };\n  const okBtnkHandler = () => {\n    if (value === '') {\n      setError(true);\n    } else {\n      editTodo(id, value);\n      setEditTask(false);\n    }\n    ;\n  };\n  const crossBtnkHandler = () => {\n    if (value === '' || value) {\n      setEditTask(false);\n      setValue(title);\n      setError(false);\n    }\n  };\n  const editTaskBtnHandler = () => {\n    if (isDone) {\n      return;\n    } else {\n      setEditTask(true);\n    }\n    ;\n  };\n  const trashBtnHandler = () => {\n    removeTask(id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styled.container,\n    children: editTask ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${checked ? styled.taskIsDone : styled.taskIsNotDone}`,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: editTaskInputRef,\n        value: value,\n        onKeyDown: onKeyDownHandler,\n        placeholder: error ? 'Field is required' : '',\n        onChange: e => {\n          setValue(e.target.value);\n          setError(false);\n        },\n        className: `${error ? styled.inputError : styled.input}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styled.iconsContainer,\n        children: [/*#__PURE__*/_jsxDEV(Ok, {\n          onKeyDown: onKeyPressHandler,\n          onClick: okBtnkHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Cross, {\n          onClick: crossBtnkHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 6\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${checked ? styled.taskIsDone : styled.taskIsNotDone}`,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styled.titleUpdate,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styled.iconsContainer,\n        children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n          id: id,\n          disabled: editTask,\n          onChange: onChangeHandler,\n          checked: isDone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(EditTask, {\n          onClick: editTaskBtnHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Trash, {\n          onClick: trashBtnHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 8\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 4\n  }, this);\n};\n_s(ListOfTodos, \"p+e6cKvMPqRohPYz7sWco6+sO2E=\");\n_c = ListOfTodos;\nexport default ListOfTodos;\nvar _c;\n$RefreshReg$(_c, \"ListOfTodos\");","map":{"version":3,"names":["React","ChangeEvent","KeyboardEvent","useEffect","useRef","useState","useContext","Checkbox","EditTask","Trash","Ok","Cross","styled","ListOfTodosContext","jsxDEV","_jsxDEV","ListOfTodos","_ref","_s","title","id","isDone","checked","onChangeHandler","onKeyPressHandler","editTodo","removeTask","editTask","setEditTask","editTaskInputRef","value","setValue","error","setError","onKeyDownHandler","e","key","okBtnkHandler","crossBtnkHandler","editTaskBtnHandler","trashBtnHandler","className","container","children","taskIsDone","taskIsNotDone","ref","onKeyDown","placeholder","onChange","target","inputError","input","fileName","_jsxFileName","lineNumber","columnNumber","iconsContainer","onClick","titleUpdate","disabled","_c","$RefreshReg$"],"sources":["/Users/olek/Desktop/Coding/todo-list-with-context/src/components/list-of-todos/ListOfTodos.jsx"],"sourcesContent":["import React, { ChangeEvent, KeyboardEvent, useEffect, useRef, useState, useContext } from \"react\";\n\nimport Checkbox from \"../buttons-components/checkbox/Checkbox\";\nimport EditTask from \"../buttons-components/edit-task/EditTask\";\nimport Trash from \"../buttons-components/trash-basket/Trash\";\nimport Ok from \"../buttons-components/ok-btn/Ok\";\nimport Cross from \"../buttons-components/cross-btn/Cross\";\n\nimport styled from \"./list-of-todos.module.css\";\nimport { ListOfTodosContext } from \"../../contexts/ListOfTodos.context\";\n\n// type ListOfTodosPropsType = {\n// \tid: string;\n// \ttitle: string;\n// \tisDone: boolean;\n// \tchecked: boolean;\n// \tfilter: string;\n// \tremoveTask: (id: string) => void;\n// \tonChange: (e: ChangeEvent<HTMLInputElement>) => void;\n// \teditTodo: (id: string, title: string) => void;\n// \tonChangeHandler: (e: ChangeEvent<HTMLInputElement>) => void;\n// \tonKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void;\n// };\n\nconst ListOfTodos = ({\n\ttitle,\n\tid,\n\tisDone,\n\tchecked,\n\tonChangeHandler,\n}) => {\n\tconst { onKeyPressHandler, editTodo, removeTask, editTask, setEditTask, editTaskInputRef} = useContext(ListOfTodosContext);\n\n\tconst [value, setValue] = useState(title);\n\tconst [error, setError] = useState(false);\n\t\n\n\t\n\tconst onKeyDownHandler = (e) => {\n\t\tif(e.key === 'Enter' && value) {\n\t\t\teditTodo(id, value);\n\t\t\tsetEditTask(false);\n\t\t} else {\n\t\t\tsetError(true);\n\t\t}};\n\n\tconst okBtnkHandler = () => {\n\t\tif(value === '') {\n\t\t\tsetError(true);\n\t\t} else {\n\t\t\teditTodo(id, value);\n\t\t\tsetEditTask(false);\n\t\t};\n\t};\n\n\tconst crossBtnkHandler = () => {\n\t\tif(value === '' || value) {\n\t\t\tsetEditTask(false);\n\t\t\tsetValue(title);\n\t\t\tsetError(false);\n\t\t\t} \n\t\t};\n\t\n\tconst editTaskBtnHandler = () => {\n\t\tif(isDone) {\n\t\t\treturn\n\t\t} else {\n\t\t\tsetEditTask(true);\n\t\t};\n\t};\n\n\tconst trashBtnHandler = () => {\n\t\tremoveTask(id);\n\t};\n\n\n\n\n\treturn (\n\t\t\t<div className={styled.container}>\n\t\t\t\t{editTask ? (\n\t\t\t\t\t<div className={`${checked ? styled.taskIsDone : styled.taskIsNotDone}`}>\n\n\t\t\t\t\t\t<input \n\t\t\t\t\t\t\tref={editTaskInputRef}\n\t\t\t\t\t\t\tvalue={value} \n\t\t\t\t\t\t\tonKeyDown={onKeyDownHandler}\n\t\t\t\t\t\t\tplaceholder={error ? 'Field is required' : ''}\n\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tsetValue(e.target.value);\n\t\t\t\t\t\t\tsetError(false)\n\t\t\t\t\t\t}} \n\t\t\t\t\t\t\tclassName={`${error ? styled.inputError :  styled.input}`}/>\n\n\t\t\t\t\t\t<div className={styled.iconsContainer}>\n\t\t\t\t\t\t\t<Ok \n\t\t\t\t\t\t\t\tonKeyDown={onKeyPressHandler}\n\t\t\t\t\t\t\t\tonClick={okBtnkHandler}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Cross onClick={crossBtnkHandler}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t<div className={`${checked ? styled.taskIsDone : styled.taskIsNotDone}`}>\n\n\t\t\t\t\t\t<span className={styled.titleUpdate}>{title}</span>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<div className={styled.iconsContainer}>\n\t\t\t\t\t\t\t<Checkbox \n\t\t\t\t\t\t\t\tid={id} \n\t\t\t\t\t\t\t\tdisabled={editTask}\n\t\t\t\t\t\t\t\tonChange={onChangeHandler} \n\t\t\t\t\t\t\t\tchecked={isDone}\n\t\t\t\t\t\t\t\t/>\t\n\t\t\t\t\t\t\t<EditTask\n\t\t\t\t\t\t\t\tonClick={editTaskBtnHandler}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Trash \n\t\t\t\t\t\t\t\tonClick={trashBtnHandler}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\t\t\t\t\t\t\n\t\t\t\t)}\n\t\t\t</div>\n\t);\n};\n\nexport default ListOfTodos;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}