{"ast":null,"code":"export let INPUT_ACTION_TYPES = /*#__PURE__*/function (INPUT_ACTION_TYPES) {\n  INPUT_ACTION_TYPES[\"SET_INPUT_VALUE\"] = \"SET_INPUT_VALUE\";\n  INPUT_ACTION_TYPES[\"SET_INPUT_ERROR\"] = \"SET_INPUT_ERROR\";\n  return INPUT_ACTION_TYPES;\n}({});\nexport const INPUT_INITIAL_STATE = {\n  value: '',\n  error: false\n};\nexport const inputReducer = (state, action) => {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case INPUT_ACTION_TYPES.SET_INPUT_VALUE:\n      return {\n        ...state,\n        value: payload\n      };\n    case INPUT_ACTION_TYPES.SET_INPUT_ERROR:\n      return {\n        ...state,\n        error: payload\n      };\n    default:\n      {\n        throw new Error(`Unexpected type of ${type}`);\n      }\n  }\n};","map":{"version":3,"names":["INPUT_ACTION_TYPES","INPUT_INITIAL_STATE","value","error","inputReducer","state","action","type","payload","SET_INPUT_VALUE","SET_INPUT_ERROR","Error"],"sources":["/Users/olek/Desktop/Coding/todo-list-with-contextAndReducers/src/reducers/todo-input.reducer.tsx"],"sourcesContent":["\n\nexport enum INPUT_ACTION_TYPES {\n    SET_INPUT_VALUE = 'SET_INPUT_VALUE',\n    SET_INPUT_ERROR = 'SET_INPUT_ERROR'\n}\n\nexport const INPUT_INITIAL_STATE = {\n    value: '',\n    error: false\n}\n\ntype StateType = {\n    value: string,\n    error: boolean\n}\n\ninterface ActionValue {\n    type: INPUT_ACTION_TYPES.SET_INPUT_VALUE\n    payload: string\n}\ntype ActionError = {\n    type: INPUT_ACTION_TYPES.SET_INPUT_ERROR\n    payload: boolean\n}\ntype ActionType = ActionValue | ActionError\n\nexport const inputReducer = (state: StateType, action: ActionType) => {\n    const { type, payload } = action;\n    \n    switch(type) {\n        case INPUT_ACTION_TYPES.SET_INPUT_VALUE :\n        return {\n            ...state,\n            value: payload\n        }\n        case INPUT_ACTION_TYPES.SET_INPUT_ERROR :\n            return {\n                ...state,\n                error: payload\n            }\n            \n            default: {\n                throw new Error(`Unexpected type of ${type}`)\n            }\n    }\n}"],"mappings":"AAEA,WAAYA,kBAAkB,0BAAlBA,kBAAkB;EAAlBA,kBAAkB;EAAlBA,kBAAkB;EAAA,OAAlBA,kBAAkB;AAAA;AAK9B,OAAO,MAAMC,mBAAmB,GAAG;EAC/BC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE;AACX,CAAC;AAiBD,OAAO,MAAMC,YAAY,GAAGA,CAACC,KAAgB,EAAEC,MAAkB,KAAK;EAClE,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAEhC,QAAOC,IAAI;IACP,KAAKP,kBAAkB,CAACS,eAAe;MACvC,OAAO;QACH,GAAGJ,KAAK;QACRH,KAAK,EAAEM;MACX,CAAC;IACD,KAAKR,kBAAkB,CAACU,eAAe;MACnC,OAAO;QACH,GAAGL,KAAK;QACRF,KAAK,EAAEK;MACX,CAAC;IAED;MAAS;QACL,MAAM,IAAIG,KAAK,CAAE,sBAAqBJ,IAAK,EAAC,CAAC;MACjD;EAAC;AAEb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}