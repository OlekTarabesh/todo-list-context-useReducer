{"ast":null,"code":"var _jsxFileName = \"/Users/olek/Desktop/Coding/todo-list-with-context/src/contexts/todo-input.context.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport { v1 } from \"uuid\";\nimport { TodoAppContext } from \"./todo-app.context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoInputContext = /*#__PURE__*/createContext({\n  inputHandler: () => null,\n  error: false,\n  addTaskHandler: () => null,\n  onKeyPressHandler: () => null\n});\nconst TodoInputProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const {\n    tasks,\n    setTasks\n  } = useContext(TodoAppContext);\n  const [error, setError] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const handelInput = text => {\n    setValue(text);\n  };\n  const inputHandler = e => {\n    handelInput(e.target.value);\n  };\n  const addTask = () => {\n    const newTask = {\n      id: v1(),\n      title: value,\n      isDone: false,\n      isEditing: false\n    };\n    if (newTask.title.trim() === \"\") {\n      return;\n    } else {\n      let newTasks = [newTask, ...tasks];\n      setTasks(newTasks);\n      setValue(\"\");\n    }\n  };\n  const addTaskHandler = () => {\n    if (value) {\n      addTask();\n    } else {\n      setError(true);\n    }\n  };\n  const onKeyPressHandler = e => {\n    setError(false);\n    if (e.key === \"Enter\" && value) {\n      addTask();\n    }\n  };\n  const todoInputValue = {\n    value,\n    inputHandler,\n    error,\n    addTaskHandler,\n    onKeyPressHandler\n  };\n  return /*#__PURE__*/_jsxDEV(TodoInputContext.Provider, {\n    value: todoInputValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoInputProvider, \"1wj3Id5A+SRPbLhvIuO9r/9Tx7k=\");\n_c = TodoInputProvider;\nexport default TodoInputProvider;\nvar _c;\n$RefreshReg$(_c, \"TodoInputProvider\");","map":{"version":3,"names":["createContext","useContext","useState","v1","TodoAppContext","jsxDEV","_jsxDEV","TodoInputContext","inputHandler","error","addTaskHandler","onKeyPressHandler","TodoInputProvider","_ref","_s","children","tasks","setTasks","setError","value","setValue","handelInput","text","e","target","addTask","newTask","id","title","isDone","isEditing","trim","newTasks","key","todoInputValue","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/olek/Desktop/Coding/todo-list-with-context/src/contexts/todo-input.context.tsx"],"sourcesContent":["import { ChangeEvent, KeyboardEvent, ReactNode, createContext, useContext, useState } from \"react\";\nimport { v1 } from \"uuid\";\nimport { TodoAppContext } from \"./todo-app.context\";\n\n\ntype TodoInputProviderTypes = {\n    children: ReactNode;\n}\n\ntype TodoInputContextTypes = {\n    inputHandler: (e: ChangeEvent<HTMLInputElement>) => void;\n    error: boolean,\n    addTaskHandler: () => void;\n    onKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void,\n}\n\nexport const TodoInputContext = createContext<TodoInputContextTypes>({\n    inputHandler: () => null,\n    error: false,\n    addTaskHandler: () => null,\n    onKeyPressHandler: () => null,\n});\n\nconst TodoInputProvider: React.FC<TodoInputProviderTypes> = ({children}) => {\n\n    const { tasks, setTasks } = useContext(TodoAppContext);\n\n    const [ error, setError ] = useState(false);\n    const [ value, setValue ] = useState(\"\");\n\n    const handelInput = (text: string) => {\n            setValue(text);\n        };\n    \n        const inputHandler = (e: ChangeEvent<HTMLInputElement>) => {\n            handelInput(e.target.value);\n        };\n    \n    const addTask = () => {\n\t\tconst newTask = {\n\t\t\tid: v1(),\n\t\t\ttitle: value,\n\t\t\tisDone: false,\n\t\t\tisEditing: false,\n\t\t};\n\n\t\tif (newTask.title.trim() === \"\") {\n\t\t\treturn;\n\t\t} else {\n\t\t\tlet newTasks = [newTask, ...tasks];\n\t\t\tsetTasks(newTasks);\n\t\t\tsetValue(\"\");\n\t\t}\n\t};\n\n    const addTaskHandler = () => {\n        if (value) {\n            addTask();\n        } else {\n            setError(true);\n        }\n    };\n\n\n\tconst onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n\t\tsetError(false);\n\t\tif (e.key === \"Enter\" && value) {\n\t\t\taddTask();\n\t\t}\n\t};\n\n    const todoInputValue = {\n        value,\n        inputHandler,\n        error,\n        addTaskHandler,\n        onKeyPressHandler\n    }\n    return (\n        <TodoInputContext.Provider value={todoInputValue}>{children}</TodoInputContext.Provider>\n    )\n\n}\n\nexport default TodoInputProvider;"],"mappings":";;AAAA,SAAgDA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClG,SAASC,EAAE,QAAQ,MAAM;AACzB,SAASC,cAAc,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAcpD,OAAO,MAAMC,gBAAgB,gBAAGP,aAAa,CAAwB;EACjEQ,YAAY,EAAEA,CAAA,KAAM,IAAI;EACxBC,KAAK,EAAE,KAAK;EACZC,cAAc,EAAEA,CAAA,KAAM,IAAI;EAC1BC,iBAAiB,EAAEA,CAAA,KAAM;AAC7B,CAAC,CAAC;AAEF,MAAMC,iBAAmD,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAACC;EAAQ,CAAC,GAAAF,IAAA;EAEnE,MAAM;IAAEG,KAAK;IAAEC;EAAS,CAAC,GAAGhB,UAAU,CAACG,cAAc,CAAC;EAEtD,MAAM,CAAEK,KAAK,EAAES,QAAQ,CAAE,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAAEiB,KAAK,EAAEC,QAAQ,CAAE,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMmB,WAAW,GAAIC,IAAY,IAAK;IAC9BF,QAAQ,CAACE,IAAI,CAAC;EAClB,CAAC;EAED,MAAMd,YAAY,GAAIe,CAAgC,IAAK;IACvDF,WAAW,CAACE,CAAC,CAACC,MAAM,CAACL,KAAK,CAAC;EAC/B,CAAC;EAEL,MAAMM,OAAO,GAAGA,CAAA,KAAM;IACxB,MAAMC,OAAO,GAAG;MACfC,EAAE,EAAExB,EAAE,EAAE;MACRyB,KAAK,EAAET,KAAK;MACZU,MAAM,EAAE,KAAK;MACbC,SAAS,EAAE;IACZ,CAAC;IAED,IAAIJ,OAAO,CAACE,KAAK,CAACG,IAAI,EAAE,KAAK,EAAE,EAAE;MAChC;IACD,CAAC,MAAM;MACN,IAAIC,QAAQ,GAAG,CAACN,OAAO,EAAE,GAAGV,KAAK,CAAC;MAClCC,QAAQ,CAACe,QAAQ,CAAC;MAClBZ,QAAQ,CAAC,EAAE,CAAC;IACb;EACD,CAAC;EAEE,MAAMV,cAAc,GAAGA,CAAA,KAAM;IACzB,IAAIS,KAAK,EAAE;MACPM,OAAO,EAAE;IACb,CAAC,MAAM;MACHP,QAAQ,CAAC,IAAI,CAAC;IAClB;EACJ,CAAC;EAGJ,MAAMP,iBAAiB,GAAIY,CAAkC,IAAK;IACjEL,QAAQ,CAAC,KAAK,CAAC;IACf,IAAIK,CAAC,CAACU,GAAG,KAAK,OAAO,IAAId,KAAK,EAAE;MAC/BM,OAAO,EAAE;IACV;EACD,CAAC;EAEE,MAAMS,cAAc,GAAG;IACnBf,KAAK;IACLX,YAAY;IACZC,KAAK;IACLC,cAAc;IACdC;EACJ,CAAC;EACD,oBACIL,OAAA,CAACC,gBAAgB,CAAC4B,QAAQ;IAAChB,KAAK,EAAEe,cAAe;IAAAnB,QAAA,EAAEA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAA6B;AAGhG,CAAC;AAAAzB,EAAA,CA3DKF,iBAAmD;AAAA4B,EAAA,GAAnD5B,iBAAmD;AA6DzD,eAAeA,iBAAiB;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}