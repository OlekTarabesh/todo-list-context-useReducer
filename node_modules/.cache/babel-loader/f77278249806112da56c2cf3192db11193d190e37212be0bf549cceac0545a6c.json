{"ast":null,"code":"var _jsxFileName = \"/Users/olek/Desktop/Coding/todo-list-with-contextAndReducers/src/contexts/todo-app.context.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getLocalstorage = () => {\n  let taska = window.localStorage.getItem(\"tasks\");\n  if (taska) {\n    return taska = JSON.parse(localStorage.getItem('tasks') || '[]');\n  } else {\n    return [];\n  }\n};\nexport const TodoAppContext = /*#__PURE__*/createContext({\n  tasks: getLocalstorage(),\n  filter: '',\n  filteredTasks: [],\n  setTasks: () => null,\n  changeStatus: () => null,\n  setFilter: () => null,\n  setError: () => null,\n  changeFilter: () => null\n});\n\n// type TodoAppReducerTypes = {\n//     state: any;\n//     action: any;\n//     type: any;\n//     payload: string;\n// }\n\nexport const TODO_APP_ACTION_TYPE = {\n  SET_TODO_APP_TYPE: 'SET_TODO_APP_TYPE'\n};\nconst todoAppReducer = (state, action) => {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case 'SET_TODO_APP_TYPE':\n      return {\n        ...state,\n        filteredTasks: payload\n      };\n    default:\n      throw new Error(`Something went wrong in ${type}`);\n  }\n};\nconst INITIAL_STATE = {\n  tasks: getLocalstorage(),\n  filter: '',\n  filteredTasks: [],\n  setTasks: () => null,\n  changeStatus: () => null,\n  setFilter: () => null,\n  setError: () => null,\n  changeFilter: () => null\n};\nconst TodoAppProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  // const [tasks, setTasks] = useState(getLocalstorage());\n  const [{\n    tasks\n  }, dispatch] = useReducer(todoAppReducer, INITIAL_STATE);\n  const setTasks = tasks => {\n    dispatch({\n      type: TODO_APP_ACTION_TYPE.SET_TODO_APP_TYPE,\n      payload: tasks\n    });\n  };\n  useEffect(() => {\n    if (tasks.length !== 0) {\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    } else {\n      localStorage.setItem('tasks', JSON.stringify([]));\n    }\n    setTasks(tasks);\n  }, [tasks]);\n  const [filter, setFilter] = useState(\"all\");\n  const [error, setError] = useState(false);\n  const changeStatus = (taskId, isDone) => {\n    const task = tasks.find(t => t.id === taskId);\n    if (task) {\n      task.isDone = !task.isDone;\n    }\n    setTasks([...tasks]);\n  };\n  let filteredTasks = tasks;\n  if (filter === 'active') {\n    filteredTasks = tasks.filter(t => t.isDone === false);\n  } else if (filter === 'completed') {\n    filteredTasks = tasks.filter(t => t.isDone === true);\n  }\n  function changeFilter(value) {\n    setFilter(value);\n  }\n  const contextValue = {\n    tasks,\n    setTasks,\n    changeStatus,\n    filter,\n    setFilter,\n    setError,\n    changeFilter,\n    filteredTasks\n  };\n  return /*#__PURE__*/_jsxDEV(TodoAppContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoAppProvider, \"tb4sNM3PnnQUXaYTAjtYxGEF1rw=\");\n_c = TodoAppProvider;\nexport default TodoAppProvider;\nvar _c;\n$RefreshReg$(_c, \"TodoAppProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","useReducer","jsxDEV","_jsxDEV","getLocalstorage","taska","window","localStorage","getItem","JSON","parse","TodoAppContext","tasks","filter","filteredTasks","setTasks","changeStatus","setFilter","setError","changeFilter","TODO_APP_ACTION_TYPE","SET_TODO_APP_TYPE","todoAppReducer","state","action","type","payload","Error","INITIAL_STATE","TodoAppProvider","_ref","_s","children","dispatch","length","setItem","stringify","error","taskId","isDone","task","find","t","id","value","contextValue","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/olek/Desktop/Coding/todo-list-with-contextAndReducers/src/contexts/todo-app.context.tsx"],"sourcesContent":["import { createContext, useEffect, useState, useReducer } from \"react\";\nimport { TodoAppProviderType, TodoAppContextType } from \"./context-types\";\nimport { TaskType } from \"../global-types\";\n\nconst getLocalstorage = () => {\n\t\tlet taska = window.localStorage.getItem(\"tasks\");\n\n\t\tif(taska) {\n\t\t\treturn (taska = JSON.parse(localStorage.getItem('tasks') || '[]'));\n\t\t} else { \n\t\t\treturn [] \n\t\t}\n\t\t\n\t}\n\nexport const TodoAppContext = createContext<TodoAppContextType>({\n    tasks: getLocalstorage(),\n    filter: '',\n    filteredTasks: [],\n    setTasks: () => null,\n    changeStatus: () => null,\n    setFilter: () => null,\n    setError: () => null,\n    changeFilter: () => null\n});\n\n// type TodoAppReducerTypes = {\n//     state: any;\n//     action: any;\n//     type: any;\n//     payload: string;\n// }\n\nexport const TODO_APP_ACTION_TYPE = {\n    SET_TODO_APP_TYPE: 'SET_TODO_APP_TYPE'\n}\nconst todoAppReducer = (state: any, action: any) => {\n    const { type, payload } = action;\n\n    switch(type) {\n        case 'SET_TODO_APP_TYPE' :\n            return {\n                ...state,\n                filteredTasks: payload\n            }\n        default: \n        throw new Error(`Something went wrong in ${type}`)\n    }\n}\n\nconst INITIAL_STATE = {\n    tasks: getLocalstorage(),\n    filter: '',\n    filteredTasks: [],\n    setTasks: () => null,\n    changeStatus: () => null,\n    setFilter: () => null,\n    setError: () => null,\n    changeFilter: () => null\n}\n\nconst TodoAppProvider: React.FC<TodoAppProviderType> = ({children}) => {\n\n    // const [tasks, setTasks] = useState(getLocalstorage());\n    const [ { tasks }, dispatch ] = useReducer(todoAppReducer, INITIAL_STATE);\n    \n    const setTasks = (tasks: TaskType[]) => {\n        dispatch({type: TODO_APP_ACTION_TYPE.SET_TODO_APP_TYPE, payload: tasks});\n    }\n\n    useEffect(() => {\n\t\tif(tasks.length !== 0) {\n\t\t\tlocalStorage.setItem('tasks', JSON.stringify(tasks));\n\t\t} else {\n\t\t\tlocalStorage.setItem('tasks', JSON.stringify([]));\n\t\t}\n\t\tsetTasks(tasks);\n        \n\t}, [tasks]);\n\n    const [ filter, setFilter ] = useState(\"all\");\n\tconst [ error, setError ] = useState(false);\n\n    \n    const changeStatus = (taskId: string, isDone: boolean) => {\n        const task = tasks.find((t: any) => t.id === taskId);\n            if (task) {\n                task.isDone = !task.isDone;\n            }\n        setTasks([...tasks]);\n    };\n\t\n\n    let filteredTasks = tasks;\n        if(filter === 'active') {\n            filteredTasks = tasks.filter((t: any) => t.isDone === false);\n\t\t} else if (filter === 'completed') {\n\t\t    filteredTasks = tasks.filter((t: any) => t.isDone === true);\n\t\t}\n\n\t\tfunction changeFilter(value: string) {\n\t\t\tsetFilter(value);\n\t\t}\n\n    const contextValue = {\n        tasks, \n        setTasks, \n        changeStatus,\n        filter,\n        setFilter,\n        setError,\n        changeFilter,\n        filteredTasks,\n    };\n\n    return (\n        <TodoAppContext.Provider value={contextValue}>{children}</TodoAppContext.Provider>\n    )\n}\n\nexport default TodoAppProvider;"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIvE,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC5B,IAAIC,KAAK,GAAGC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAEhD,IAAGH,KAAK,EAAE;IACT,OAAQA,KAAK,GAAGI,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC;EAClE,CAAC,MAAM;IACN,OAAO,EAAE;EACV;AAED,CAAC;AAEF,OAAO,MAAMG,cAAc,gBAAGb,aAAa,CAAqB;EAC5Dc,KAAK,EAAER,eAAe,EAAE;EACxBS,MAAM,EAAE,EAAE;EACVC,aAAa,EAAE,EAAE;EACjBC,QAAQ,EAAEA,CAAA,KAAM,IAAI;EACpBC,YAAY,EAAEA,CAAA,KAAM,IAAI;EACxBC,SAAS,EAAEA,CAAA,KAAM,IAAI;EACrBC,QAAQ,EAAEA,CAAA,KAAM,IAAI;EACpBC,YAAY,EAAEA,CAAA,KAAM;AACxB,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,oBAAoB,GAAG;EAChCC,iBAAiB,EAAE;AACvB,CAAC;AACD,MAAMC,cAAc,GAAGA,CAACC,KAAU,EAAEC,MAAW,KAAK;EAChD,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAEhC,QAAOC,IAAI;IACP,KAAK,mBAAmB;MACpB,OAAO;QACH,GAAGF,KAAK;QACRT,aAAa,EAAEY;MACnB,CAAC;IACL;MACA,MAAM,IAAIC,KAAK,CAAE,2BAA0BF,IAAK,EAAC,CAAC;EAAA;AAE1D,CAAC;AAED,MAAMG,aAAa,GAAG;EAClBhB,KAAK,EAAER,eAAe,EAAE;EACxBS,MAAM,EAAE,EAAE;EACVC,aAAa,EAAE,EAAE;EACjBC,QAAQ,EAAEA,CAAA,KAAM,IAAI;EACpBC,YAAY,EAAEA,CAAA,KAAM,IAAI;EACxBC,SAAS,EAAEA,CAAA,KAAM,IAAI;EACrBC,QAAQ,EAAEA,CAAA,KAAM,IAAI;EACpBC,YAAY,EAAEA,CAAA,KAAM;AACxB,CAAC;AAED,MAAMU,eAA8C,GAAGC,IAAA,IAAgB;EAAAC,EAAA;EAAA,IAAf;IAACC;EAAQ,CAAC,GAAAF,IAAA;EAE9D;EACA,MAAM,CAAE;IAAElB;EAAM,CAAC,EAAEqB,QAAQ,CAAE,GAAGhC,UAAU,CAACqB,cAAc,EAAEM,aAAa,CAAC;EAEzE,MAAMb,QAAQ,GAAIH,KAAiB,IAAK;IACpCqB,QAAQ,CAAC;MAACR,IAAI,EAAEL,oBAAoB,CAACC,iBAAiB;MAAEK,OAAO,EAAEd;IAAK,CAAC,CAAC;EAC5E,CAAC;EAEDb,SAAS,CAAC,MAAM;IAClB,IAAGa,KAAK,CAACsB,MAAM,KAAK,CAAC,EAAE;MACtB3B,YAAY,CAAC4B,OAAO,CAAC,OAAO,EAAE1B,IAAI,CAAC2B,SAAS,CAACxB,KAAK,CAAC,CAAC;IACrD,CAAC,MAAM;MACNL,YAAY,CAAC4B,OAAO,CAAC,OAAO,EAAE1B,IAAI,CAAC2B,SAAS,CAAC,EAAE,CAAC,CAAC;IAClD;IACArB,QAAQ,CAACH,KAAK,CAAC;EAEhB,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EAER,MAAM,CAAEC,MAAM,EAAEI,SAAS,CAAE,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAChD,MAAM,CAAEqC,KAAK,EAAEnB,QAAQ,CAAE,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAGxC,MAAMgB,YAAY,GAAGA,CAACsB,MAAc,EAAEC,MAAe,KAAK;IACtD,MAAMC,IAAI,GAAG5B,KAAK,CAAC6B,IAAI,CAAEC,CAAM,IAAKA,CAAC,CAACC,EAAE,KAAKL,MAAM,CAAC;IAChD,IAAIE,IAAI,EAAE;MACNA,IAAI,CAACD,MAAM,GAAG,CAACC,IAAI,CAACD,MAAM;IAC9B;IACJxB,QAAQ,CAAC,CAAC,GAAGH,KAAK,CAAC,CAAC;EACxB,CAAC;EAGD,IAAIE,aAAa,GAAGF,KAAK;EACrB,IAAGC,MAAM,KAAK,QAAQ,EAAE;IACpBC,aAAa,GAAGF,KAAK,CAACC,MAAM,CAAE6B,CAAM,IAAKA,CAAC,CAACH,MAAM,KAAK,KAAK,CAAC;EACtE,CAAC,MAAM,IAAI1B,MAAM,KAAK,WAAW,EAAE;IAC/BC,aAAa,GAAGF,KAAK,CAACC,MAAM,CAAE6B,CAAM,IAAKA,CAAC,CAACH,MAAM,KAAK,IAAI,CAAC;EAC/D;EAEA,SAASpB,YAAYA,CAACyB,KAAa,EAAE;IACpC3B,SAAS,CAAC2B,KAAK,CAAC;EACjB;EAEE,MAAMC,YAAY,GAAG;IACjBjC,KAAK;IACLG,QAAQ;IACRC,YAAY;IACZH,MAAM;IACNI,SAAS;IACTC,QAAQ;IACRC,YAAY;IACZL;EACJ,CAAC;EAED,oBACIX,OAAA,CAACQ,cAAc,CAACmC,QAAQ;IAACF,KAAK,EAAEC,YAAa;IAAAb,QAAA,EAAEA;EAAQ;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAA2B;AAE1F,CAAC;AAAAnB,EAAA,CAzDKF,eAA8C;AAAAsB,EAAA,GAA9CtB,eAA8C;AA2DpD,eAAeA,eAAe;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}