{"ast":null,"code":"var _jsxFileName = \"/Users/olek/Desktop/Coding/todo-list-with-contextAndReducers/src/contexts/todo-app.context.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoAppContext = /*#__PURE__*/createContext({\n  tasks: [],\n  filter: 'all',\n  filteredTasks: [],\n  setTasks: () => null,\n  changeStatus: () => null,\n  setFilter: () => null,\n  changeFilter: () => null\n});\nexport const INPUT_ACTION_TYPES = {\n  SET_TODOAPP_TASKS: 'SET_TODOAPP_TASKS',\n  SET_TODOAPP_FILTER: 'SET_TODOAPP_FILTER'\n};\nexport const INITIAL_STATE = {\n  filter: 'all',\n  tasks: JSON.parse(window.localStorage.getItem('tasks') || '[]')\n};\nconst todoAppReducer = (state, action) => {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case INPUT_ACTION_TYPES.SET_TODOAPP_TASKS:\n      return {\n        ...state,\n        tasks: payload\n      };\n    case INPUT_ACTION_TYPES.SET_TODOAPP_FILTER:\n      return {\n        ...state,\n        filter: payload\n      };\n    default:\n      {\n        throw new Error(`Unexpected type of ${type}`);\n      }\n  }\n};\nconst TodoAppProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [{\n    filter,\n    tasks\n  }, dispatch] = useReducer(todoAppReducer, INITIAL_STATE);\n  const setTasks = taska => {\n    dispatch({\n      type: INPUT_ACTION_TYPES.SET_TODOAPP_TASKS,\n      payload: taska\n    });\n  };\n\n  // const getLocalstorage = () => {\n  // \tlet taska = window.localStorage.getItem(\"tasks\");\n\n  // \tif(taska) {\n  // \t\treturn (taska = JSON.parse(localStorage.getItem('tasks') || '[]'));\n  // \t} else { \n  // \t\treturn [] \n  // \t}\n\n  // }\n\n  // const [tasks, setTasks] = useState(getLocalstorage());\n\n  useEffect(() => {\n    if (tasks.length !== 0) {\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    } else {\n      localStorage.setItem('tasks', JSON.stringify([]));\n    }\n    setTasks(tasks);\n  }, [tasks]);\n  const setFilter = values => {\n    dispatch({\n      type: INPUT_ACTION_TYPES.SET_TODOAPP_FILTER,\n      payload: values\n    });\n  };\n  const changeStatus = (taskId, isDone) => {\n    const task = tasks.find(t => t.id === taskId);\n    if (task) {\n      task.isDone = !task.isDone;\n    }\n    setTasks([...tasks]);\n  };\n  let filteredTasks = tasks;\n  if (filter === 'active') {\n    filteredTasks = tasks.filter(t => t.isDone === false);\n  } else if (filter === 'completed') {\n    filteredTasks = tasks.filter(t => t.isDone === true);\n  }\n  function changeFilter(value) {\n    setFilter(value);\n  }\n  const contextValue = {\n    tasks,\n    setTasks,\n    changeStatus,\n    filter,\n    setFilter,\n    changeFilter,\n    filteredTasks\n  };\n  return /*#__PURE__*/_jsxDEV(TodoAppContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoAppProvider, \"U8kRuYRT6tm5b+73iHuukpWwdOA=\");\n_c = TodoAppProvider;\nexport default TodoAppProvider;\nvar _c;\n$RefreshReg$(_c, \"TodoAppProvider\");","map":{"version":3,"names":["createContext","useEffect","useReducer","jsxDEV","_jsxDEV","TodoAppContext","tasks","filter","filteredTasks","setTasks","changeStatus","setFilter","changeFilter","INPUT_ACTION_TYPES","SET_TODOAPP_TASKS","SET_TODOAPP_FILTER","INITIAL_STATE","JSON","parse","window","localStorage","getItem","todoAppReducer","state","action","type","payload","Error","TodoAppProvider","_ref","_s","children","dispatch","taska","length","setItem","stringify","values","taskId","isDone","task","find","t","id","value","contextValue","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/olek/Desktop/Coding/todo-list-with-contextAndReducers/src/contexts/todo-app.context.tsx"],"sourcesContent":["import { createContext, useEffect, useState, useReducer } from \"react\";\nimport { TodoAppProviderType, TodoAppContextType } from \"./context-types\";\nimport { TaskType } from \"../global-types\";\n\n\nexport const TodoAppContext = createContext<TodoAppContextType>({\n    tasks: [],\n    filter: 'all',\n    filteredTasks: [],\n    setTasks: () => null,\n    changeStatus: () => null,\n    setFilter: () => null,\n    changeFilter: () => null\n});\n\nexport const INPUT_ACTION_TYPES = {\n    SET_TODOAPP_TASKS: 'SET_TODOAPP_TASKS',\n    SET_TODOAPP_FILTER: 'SET_TODOAPP_FILTER',\n}\n\nexport const INITIAL_STATE = {\n    filter: 'all',\n    tasks: JSON.parse(window.localStorage.getItem('tasks') || '[]'),\n}\n\nconst todoAppReducer = (state: any, action: any) => {\n    const { type, payload } = action;\n\n    switch(type) {\n        case INPUT_ACTION_TYPES.SET_TODOAPP_TASKS :\n            return {\n                ...state,\n                tasks: payload\n            }\n        case INPUT_ACTION_TYPES.SET_TODOAPP_FILTER :\n            return {\n                ...state,\n                filter: payload\n            }\n            default: {\n                throw new Error(`Unexpected type of ${type}`)\n            }\n    }\n}\n\nconst TodoAppProvider: React.FC<TodoAppProviderType> = ({children}) => {\n\n    const [{filter, tasks}, dispatch] = useReducer(todoAppReducer, INITIAL_STATE)\n    \n    const setTasks = (taska: Array<TaskType>) => {\n        dispatch({type: INPUT_ACTION_TYPES.SET_TODOAPP_TASKS, payload: taska})\n    }\n    \n    // const getLocalstorage = () => {\n\t// \tlet taska = window.localStorage.getItem(\"tasks\");\n\n\t// \tif(taska) {\n\t// \t\treturn (taska = JSON.parse(localStorage.getItem('tasks') || '[]'));\n\t// \t} else { \n\t// \t\treturn [] \n\t// \t}\n\t\t\n\t// }\n\n    // const [tasks, setTasks] = useState(getLocalstorage());\n\n    useEffect(() => {\n\t\tif(tasks.length !== 0) {\n\t\t\tlocalStorage.setItem('tasks', JSON.stringify(tasks));\n\t\t} else {\n\t\t\tlocalStorage.setItem('tasks', JSON.stringify([]));\n\t\t}\n\t\tsetTasks(tasks);\n        \n\t}, [tasks]);\n\n\n    const setFilter = (values: string) => {\n        dispatch({type: INPUT_ACTION_TYPES.SET_TODOAPP_FILTER, payload: values})\n    }\n    \n    const changeStatus = (taskId: string, isDone: boolean) => {\n        const task = tasks.find((t: any) => t.id === taskId);\n            if (task) {\n                task.isDone = !task.isDone;\n            }\n        setTasks([...tasks]);\n    };\n\t\n\n    let filteredTasks = tasks;\n        if(filter === 'active') {\n            filteredTasks = tasks.filter((t: any) => t.isDone === false);\n\t\t} else if (filter === 'completed') {\n\t\t    filteredTasks = tasks.filter((t: any) => t.isDone === true);\n\t\t}\n\n\t\tfunction changeFilter(value: string) {\n\t\t\tsetFilter(value);\n\t\t}\n\n    const contextValue = {\n        tasks, \n        setTasks, \n        changeStatus,\n        filter,\n        setFilter,\n        changeFilter,\n        filteredTasks,\n    };\n\n    return (\n        <TodoAppContext.Provider value={contextValue}>{children}</TodoAppContext.Provider>\n    )\n}\n\nexport default TodoAppProvider;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}