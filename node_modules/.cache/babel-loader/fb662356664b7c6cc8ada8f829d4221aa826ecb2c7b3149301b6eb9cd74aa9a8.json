{"ast":null,"code":"var _jsxFileName = \"/Users/olek/Desktop/Coding/todo-list-with-contextAndReducers/src/contexts/todo-input.context.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useContext, useReducer, useState } from \"react\";\nimport { v1 } from \"uuid\";\nimport { TodoAppContext } from \"./todo-app.context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoInputContext = /*#__PURE__*/createContext({\n  value: '',\n  error: false,\n  inputHandler: () => null,\n  addTaskHandler: () => null,\n  onKeyPressHandler: () => null\n});\nvar INPUT_ACTION_TYPES = /*#__PURE__*/function (INPUT_ACTION_TYPES) {\n  INPUT_ACTION_TYPES[INPUT_ACTION_TYPES[\"SET_INPUT_VALUE\"] = 0] = \"SET_INPUT_VALUE\";\n  INPUT_ACTION_TYPES[INPUT_ACTION_TYPES[\"SET_INPUT_ERROR\"] = 1] = \"SET_INPUT_ERROR\";\n  return INPUT_ACTION_TYPES;\n}(INPUT_ACTION_TYPES || {});\nexport const INITIAL_STATE = {\n  value: '',\n  error: false\n};\nconst inputReducer = (state, action) => {\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case INPUT_ACTION_TYPES.SET_INPUT_VALUE:\n      return {\n        ...state,\n        value: payload\n      };\n    case INPUT_ACTION_TYPES.SET_INPUT_ERROR:\n      return {\n        ...state,\n        value: null,\n        error: !state.error\n      };\n    default:\n      {\n        throw new Error(`Unexpected type of ${type}`);\n      }\n  }\n};\nconst TodoInputProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const {\n    tasks,\n    setTasks\n  } = useContext(TodoAppContext);\n\n  // const [ error, setError ] = useState(false);\n  const [value, setValue] = useState(\"\");\n  const [{\n    error\n  }, dispatch] = useReducer(inputReducer, INITIAL_STATE);\n\n  // const setValue = (value: string) => {\n  //     dispatch({type: INPUT_ACTION_TYPES.SET_INPUT_VALUE, value: value})\n  // }\n\n  const setError = error => {\n    dispatch({\n      type: INPUT_ACTION_TYPES.SET_INPUT_ERROR,\n      error: error\n    });\n  };\n  const handelInput = text => {\n    setValue(text);\n  };\n  const inputHandler = e => {\n    handelInput(e.target.value);\n  };\n  const addTask = () => {\n    const newTask = {\n      id: v1(),\n      title: value,\n      isDone: false,\n      isEditing: false\n    };\n    if (newTask.title.trim() === \"\") {\n      return;\n    } else {\n      let newTasks = [newTask, ...tasks];\n      setTasks(newTasks);\n      setValue(\"\");\n    }\n  };\n  const addTaskHandler = () => {\n    if (value) {\n      addTask();\n    } else {\n      setError(true);\n    }\n  };\n  const onKeyPressHandler = e => {\n    setError(false);\n    if (e.key === \"Enter\" && value) {\n      addTask();\n    }\n  };\n  const todoInputValue = {\n    value,\n    inputHandler,\n    error,\n    addTaskHandler,\n    onKeyPressHandler\n  };\n  return /*#__PURE__*/_jsxDEV(TodoInputContext.Provider, {\n    value: todoInputValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoInputProvider, \"5INbFTBZmuVu0pnBqMLvjc5XwTs=\");\n_c = TodoInputProvider;\nexport default TodoInputProvider;\nvar _c;\n$RefreshReg$(_c, \"TodoInputProvider\");","map":{"version":3,"names":["createContext","useContext","useReducer","useState","v1","TodoAppContext","jsxDEV","_jsxDEV","TodoInputContext","value","error","inputHandler","addTaskHandler","onKeyPressHandler","INPUT_ACTION_TYPES","INITIAL_STATE","inputReducer","state","action","type","payload","SET_INPUT_VALUE","SET_INPUT_ERROR","Error","TodoInputProvider","_ref","_s","children","tasks","setTasks","setValue","dispatch","setError","handelInput","text","e","target","addTask","newTask","id","title","isDone","isEditing","trim","newTasks","key","todoInputValue","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/olek/Desktop/Coding/todo-list-with-contextAndReducers/src/contexts/todo-input.context.tsx"],"sourcesContent":["import { \n    ChangeEvent, \n    KeyboardEvent, \n    createContext, \n    useContext, \n    useReducer, \n    useState \n} from \"react\";\nimport { v1 } from \"uuid\";\nimport { TodoAppContext } from \"./todo-app.context\";\nimport { TodoInputContextTypes, TodoInputProviderTypes } from \"./context-types\";\n\n\n\nexport const TodoInputContext = createContext<TodoInputContextTypes>({\n    value: '',\n    error: false,\n    inputHandler: () => null,\n    addTaskHandler: () => null,\n    onKeyPressHandler: () => null,\n});\n\nconst enum INPUT_ACTION_TYPES {\n    SET_INPUT_VALUE,\n    SET_INPUT_ERROR\n}\n\nexport const INITIAL_STATE = {\n    value: '',\n    error: false\n}\n\nconst inputReducer = (state: any, action: any) => {\n    const { type, payload } = action;\n\n    switch(type) {\n        case INPUT_ACTION_TYPES.SET_INPUT_VALUE :\n        return {\n            ...state,\n            value: payload\n        }\n        case INPUT_ACTION_TYPES.SET_INPUT_ERROR :\n            return {\n                ...state,\n                value: null,\n                error: !state.error\n            }\n            default: {\n                throw new Error(`Unexpected type of ${type}`)\n            }\n    }\n}\n\nconst TodoInputProvider: React.FC<TodoInputProviderTypes> = ({children}) => {\n\n    const { tasks, setTasks } = useContext(TodoAppContext);\n\n    // const [ error, setError ] = useState(false);\n    const [ value, setValue ] = useState(\"\");\n    const [ { error }, dispatch ] = useReducer(inputReducer, INITIAL_STATE);\n    \n    // const setValue = (value: string) => {\n    //     dispatch({type: INPUT_ACTION_TYPES.SET_INPUT_VALUE, value: value})\n    // }\n\n    const setError = (error: boolean) => {\n        dispatch({type: INPUT_ACTION_TYPES.SET_INPUT_ERROR, error: error})\n    }\n\n    \n    const handelInput = (text: string) => {\n            setValue(text);\n        };\n    \n        const inputHandler = (e: ChangeEvent<HTMLInputElement>) => {\n            handelInput(e.target.value);\n        };\n    \n    const addTask = () => {\n\t\tconst newTask = {\n\t\t\tid: v1(),\n\t\t\ttitle: value,\n\t\t\tisDone: false,\n\t\t\tisEditing: false,\n\t\t};\n\n\t\tif (newTask.title.trim() === \"\") {\n\t\t\treturn;\n\t\t} else {\n\t\t\tlet newTasks = [newTask, ...tasks];\n\t\t\tsetTasks(newTasks);\n\t\t\tsetValue(\"\");\n\t\t}\n\t};\n\n    const addTaskHandler = () => {\n        if (value) {\n            addTask();\n        } else {\n            setError(true);\n        }\n    };\n\n\n\tconst onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n\t\tsetError(false);\n\t\tif (e.key === \"Enter\" && value) {\n\t\t\taddTask();\n\t\t}\n\t};\n\n    const todoInputValue = {\n        value,\n        inputHandler,\n        error,\n        addTaskHandler,\n        onKeyPressHandler\n    }\n    return (\n        <TodoInputContext.Provider value={todoInputValue}>{children}</TodoInputContext.Provider>\n    )\n\n}\n\nexport default TodoInputProvider;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}