{"ast":null,"code":"var _jsxFileName = \"/Users/olek/Desktop/Coding/todo-list-with-context/src/components/todo-Input/TodoInput.jsx\",\n  _s = $RefreshSig$();\nimport React, { ChangeEvent, KeyboardEvent, useContext } from \"react\";\nimport Button from \"../buttons-components/button/Button\";\nimport styled from \"./todo-input.module.css\";\nimport { TodoInputContext } from \"../../contexts/todo-input.context\";\nimport { v1 } from \"uuid\";\n\n// type TodoInputPropsType = {\n// \tid: string;\n// \tvalue: string;\n// \terror: boolean | null;\n// \tinputHandler: (e: ChangeEvent<HTMLInputElement>) => void;\n// \tonKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void;\n// \taddTaskHandler: () => void;\n// };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoInput = () => {\n  _s();\n  const {\n    value,\n    error,\n    inputHandler,\n    onKeyPressHandler,\n    addTaskHandler\n  } = useContext(TodoInputContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styled.container,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styled.inputAndButton,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: v1(),\n        type: \"text\",\n        placeholder: error ? \"Field is required\" : \"New Task...\",\n        value: value,\n        onChange: inputHandler,\n        onKeyDown: onKeyPressHandler,\n        className: `${error ? styled.error : styled.input}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: addTaskHandler,\n        className: `${error ? styled.inputButtonError : styled.inputButton}`,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 5\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styled.errorMassage,\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n};\n_s(TodoInput, \"O+vLHG0H+9GM8LkY5MOCOSw5Jms=\");\n_c = TodoInput;\nexport default TodoInput;\nvar _c;\n$RefreshReg$(_c, \"TodoInput\");","map":{"version":3,"names":["React","ChangeEvent","KeyboardEvent","useContext","Button","styled","TodoInputContext","v1","jsxDEV","_jsxDEV","TodoInput","_s","value","error","inputHandler","onKeyPressHandler","addTaskHandler","className","container","children","inputAndButton","id","type","placeholder","onChange","onKeyDown","input","fileName","_jsxFileName","lineNumber","columnNumber","onClick","inputButtonError","inputButton","errorMassage","_c","$RefreshReg$"],"sources":["/Users/olek/Desktop/Coding/todo-list-with-context/src/components/todo-Input/TodoInput.jsx"],"sourcesContent":["import React, { ChangeEvent, KeyboardEvent, useContext } from \"react\";\n\nimport Button from \"../buttons-components/button/Button\";\n\nimport styled from \"./todo-input.module.css\";\nimport { TodoInputContext } from \"../../contexts/todo-input.context\";\nimport { v1 } from \"uuid\";\n\n// type TodoInputPropsType = {\n// \tid: string;\n// \tvalue: string;\n// \terror: boolean | null;\n// \tinputHandler: (e: ChangeEvent<HTMLInputElement>) => void;\n// \tonKeyPressHandler: (e: KeyboardEvent<HTMLInputElement>) => void;\n// \taddTaskHandler: () => void;\n// };\n\nconst TodoInput = () => {\n\n\tconst { \n\t\tvalue, \n\t\terror, \n\t\tinputHandler, \n\t\tonKeyPressHandler, \n\t\taddTaskHandler \n\t} = useContext(TodoInputContext);\n\n\treturn (\n\t\t<div className={styled.container}>\n\t\t\t<div className={styled.inputAndButton}>\n\t\t\t\t<input\n\t\t\t\t\tid={v1()}\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tplaceholder={error ? \"Field is required\" : \"New Task...\"}\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChange={inputHandler}\n\t\t\t\t\tonKeyDown={onKeyPressHandler}\n\t\t\t\t\tclassName={`${error ? styled.error : styled.input}`}\n\t\t\t\t/>\n\t\t\t\t\n\t\t\t\t<Button\n\n\t\t\t\t\tonClick={addTaskHandler}\n\t\t\t\t\tclassName={`${\n\t\t\t\t\t\terror ? styled.inputButtonError : styled.inputButton\n\t\t\t\t\t}`}\n\t\t\t\t>\n\t\t\t\t\tAdd Task\n\t\t\t\t</Button>\n\t\t\t\t{error && <div className={styled.errorMassage}>{error}</div>}\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default TodoInput;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAErE,OAAOC,MAAM,MAAM,qCAAqC;AAExD,OAAOC,MAAM,MAAM,yBAAyB;AAC5C,SAASC,gBAAgB,QAAQ,mCAAmC;AACpE,SAASC,EAAE,QAAQ,MAAM;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEvB,MAAM;IACLC,KAAK;IACLC,KAAK;IACLC,YAAY;IACZC,iBAAiB;IACjBC;EACD,CAAC,GAAGb,UAAU,CAACG,gBAAgB,CAAC;EAEhC,oBACCG,OAAA;IAAKQ,SAAS,EAAEZ,MAAM,CAACa,SAAU;IAAAC,QAAA,eAChCV,OAAA;MAAKQ,SAAS,EAAEZ,MAAM,CAACe,cAAe;MAAAD,QAAA,gBACrCV,OAAA;QACCY,EAAE,EAAEd,EAAE,EAAG;QACTe,IAAI,EAAC,MAAM;QACXC,WAAW,EAAEV,KAAK,GAAG,mBAAmB,GAAG,aAAc;QACzDD,KAAK,EAAEA,KAAM;QACbY,QAAQ,EAAEV,YAAa;QACvBW,SAAS,EAAEV,iBAAkB;QAC7BE,SAAS,EAAG,GAAEJ,KAAK,GAAGR,MAAM,CAACQ,KAAK,GAAGR,MAAM,CAACqB,KAAM;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACnD,eAEFrB,OAAA,CAACL,MAAM;QAEN2B,OAAO,EAAEf,cAAe;QACxBC,SAAS,EAAG,GACXJ,KAAK,GAAGR,MAAM,CAAC2B,gBAAgB,GAAG3B,MAAM,CAAC4B,WACzC,EAAE;QAAAd,QAAA,EACH;MAED;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,EACRjB,KAAK,iBAAIJ,OAAA;QAAKQ,SAAS,EAAEZ,MAAM,CAAC6B,YAAa;QAAAf,QAAA,EAAEN;MAAK;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACvD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAER,CAAC;AAACnB,EAAA,CApCID,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AAsCf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}