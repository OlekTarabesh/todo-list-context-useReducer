{"ast":null,"code":"var _jsxFileName = \"/Users/olek/Desktop/Coding/todo-list-with-contextAndReducers/src/contexts/todo-input.context.tsx\",\n  _s = $RefreshSig$();\nimport { createContext, useContext, useReducer } from \"react\";\nimport { TodoAppContext } from \"./todo-app.context\";\nimport { INPUT_ACTION_TYPES, inputReducer, INPUT_INITIAL_STATE } from \"../reducers/todo-input.reducer\";\nimport { v1 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoInputContext = /*#__PURE__*/createContext({\n  value: '',\n  error: false,\n  inputHandler: () => null,\n  addTaskHandler: () => null,\n  onKeyPressHandler: () => null\n});\nconst TodoInputProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const {\n    tasks,\n    setTasks\n  } = useContext(TodoAppContext);\n  const [{\n    error,\n    value\n  }, dispatch] = useReducer(inputReducer, INPUT_INITIAL_STATE);\n  const setValue = value => {\n    dispatch({\n      type: INPUT_ACTION_TYPES.SET_INPUT_VALUE,\n      payload: value\n    });\n  };\n  const setError = error => {\n    dispatch({\n      type: INPUT_ACTION_TYPES.SET_INPUT_ERROR,\n      payload: error\n    });\n  };\n  const handelInput = text => {\n    setValue(text);\n  };\n  const inputHandler = e => {\n    handelInput(e.target.value);\n  };\n  const addTask = () => {\n    const newTask = {\n      id: v1(),\n      title: value,\n      isDone: false,\n      isEditing: false\n    };\n    if (newTask.title.trim() === \"\") {\n      return;\n    } else {\n      let newTasks = [newTask, ...tasks];\n      setTasks(newTasks);\n      setValue(\"\");\n    }\n  };\n  const addTaskHandler = () => {\n    if (value.length > 0) {\n      addTask();\n    } else {\n      setError(true);\n    }\n  };\n  const onKeyPressHandler = e => {\n    setError(false);\n    if (e.key === \"Enter\" && value) {\n      addTask();\n    }\n  };\n  const todoInputValue = {\n    value,\n    inputHandler,\n    error,\n    addTaskHandler,\n    onKeyPressHandler\n  };\n  return /*#__PURE__*/_jsxDEV(TodoInputContext.Provider, {\n    value: todoInputValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoInputProvider, \"Rxe+NX1rXpIzZZ2ua1bsg3b9r0c=\");\n_c = TodoInputProvider;\nexport default TodoInputProvider;\nvar _c;\n$RefreshReg$(_c, \"TodoInputProvider\");","map":{"version":3,"names":["createContext","useContext","useReducer","TodoAppContext","INPUT_ACTION_TYPES","inputReducer","INPUT_INITIAL_STATE","v1","jsxDEV","_jsxDEV","TodoInputContext","value","error","inputHandler","addTaskHandler","onKeyPressHandler","TodoInputProvider","_ref","_s","children","tasks","setTasks","dispatch","setValue","type","SET_INPUT_VALUE","payload","setError","SET_INPUT_ERROR","handelInput","text","e","target","addTask","newTask","id","title","isDone","isEditing","trim","newTasks","length","key","todoInputValue","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/olek/Desktop/Coding/todo-list-with-contextAndReducers/src/contexts/todo-input.context.tsx"],"sourcesContent":["import { \n    ChangeEvent, \n    KeyboardEvent, \n    createContext, \n    useContext, \n    useReducer, \n} from \"react\";\n\nimport { TodoInputContextTypes, TodoInputProviderTypes } from \"./context-types\";\nimport { TodoAppContext } from \"./todo-app.context\";\nimport { INPUT_ACTION_TYPES, inputReducer, INPUT_INITIAL_STATE } from \"../reducers/todo-input.reducer\";\n\nimport { v1 } from \"uuid\";\n\n\nexport const TodoInputContext = createContext<TodoInputContextTypes>({\n    value: '',\n    error: false,\n    inputHandler: () => null,\n    addTaskHandler: () => null,\n    onKeyPressHandler: () => null,\n});\n\n\n\nconst TodoInputProvider: React.FC<TodoInputProviderTypes> = ({children}) => {\n\n    const { tasks, setTasks } = useContext(TodoAppContext);\n\n    const [ { error, value }, dispatch ] = useReducer(inputReducer, INPUT_INITIAL_STATE);\n    \n    const setValue = (value: string) => {\n        dispatch({type: INPUT_ACTION_TYPES.SET_INPUT_VALUE, payload: value})\n    }\n\n    const setError = (error: boolean) => {\n        dispatch({type: INPUT_ACTION_TYPES.SET_INPUT_ERROR, payload: error})\n    }\n\n    \n    const handelInput = (text: string) => {\n            setValue(text);\n        };\n    \n        const inputHandler = (e: ChangeEvent<HTMLInputElement>) => {\n            handelInput(e.target.value);\n        };\n    \n    const addTask = () => {\n\t\tconst newTask = {\n\t\t\tid: v1(),\n\t\t\ttitle: value,\n\t\t\tisDone: false,\n\t\t\tisEditing: false,\n\t\t};\n\n\t\tif (newTask.title.trim() === \"\") {\n\t\t\treturn;\n\t\t} else {\n\t\t\tlet newTasks = [newTask, ...tasks];\n\t\t\tsetTasks(newTasks);\n\t\t\tsetValue(\"\");\n\t\t}\n\t};\n\n    const addTaskHandler = () => {\n        if (value.length > 0) {\n            addTask();\n        } else {\n            setError(true);\n        }\n    };\n\n\n\tconst onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n\t\tsetError(false);\n\t\tif (e.key === \"Enter\" && value) {\n\t\t\taddTask();\n\t\t}\n\t};\n\n    const todoInputValue = {\n        value,\n        inputHandler,\n        error,\n        addTaskHandler,\n        onKeyPressHandler\n    }\n    return (\n        <TodoInputContext.Provider value={todoInputValue}>{children}</TodoInputContext.Provider>\n    )\n\n}\n\nexport default TodoInputProvider;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}