{"ast":null,"code":"var _jsxFileName = \"/Users/olek/Desktop/Coding/todo-list-with-context/src/components/todo-app/TodoApp.jsx\",\n  _s = $RefreshSig$();\nimport React, {\n// ChangeEvent, \n// KeyboardEvent, \n// useEffect, \nuseContext } from 'react';\nimport { TodoAppContext } from '../../contexts/todo-app.context';\nimport TodoInput from '../todo-Input/TodoInput';\nimport ListOfTodos from '../list-of-todos/ListOfTodos';\nimport FilterButtons from '../buttons-components/filter-buttons/FilterButtons';\n// import { FilterValuesType, TaskType } from '../../global-type';\nimport styled from './todo-app.module.css';\nimport { ListOfTodosContext } from '../../contexts/ListOfTodos.context';\n\n// type TodoAppPropsType = {};\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoApp = () => {\n  _s();\n  const {\n    removeTask,\n    // changeStatus,\n    filter,\n    changeFilter,\n    filteredTasks,\n    onKeyPressHandler,\n    editTodo\n  } = useContext(TodoAppContext);\n  const {\n    changeStatus\n  } = useContext(ListOfTodosContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styled.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styled.title,\n      children: \"My Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styled.todoInputSec,\n      children: /*#__PURE__*/_jsxDEV(TodoInput, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styled.todosSec,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styled.todos,\n        children: filteredTasks.map(taska => {\n          const onChangeHandler = e => {\n            changeStatus(taska.id, e.currentTarget.checked);\n          };\n          return /*#__PURE__*/_jsxDEV(ListOfTodos, {\n            title: taska.title,\n            id: taska.id,\n            isDone: taska.isDone,\n            removeTask: () => removeTask(taska.id),\n            onChange: onChangeHandler,\n            editTodo: editTodo,\n            onChangeHandler: onChangeHandler,\n            checked: taska.isDone,\n            onKeyPressHandler: onKeyPressHandler,\n            filter: filter\n          }, taska.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 7\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(FilterButtons, {\n      filter: filter,\n      filteredTasks: filteredTasks,\n      changeFilter: changeFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoApp, \"6fzIInlwCYtMmybqxQiyb0fMS5Y=\");\n_c = TodoApp;\nexport default TodoApp;\nvar _c;\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"names":["React","useContext","TodoAppContext","TodoInput","ListOfTodos","FilterButtons","styled","ListOfTodosContext","jsxDEV","_jsxDEV","TodoApp","_s","removeTask","filter","changeFilter","filteredTasks","onKeyPressHandler","editTodo","changeStatus","className","wrapper","children","title","fileName","_jsxFileName","lineNumber","columnNumber","todoInputSec","todosSec","todos","map","taska","onChangeHandler","e","id","currentTarget","checked","isDone","onChange","_c","$RefreshReg$"],"sources":["/Users/olek/Desktop/Coding/todo-list-with-context/src/components/todo-app/TodoApp.jsx"],"sourcesContent":["import React, { \n\t// ChangeEvent, \n\t// KeyboardEvent, \n\t// useEffect, \n\tuseContext,\n} from 'react'\n\nimport { TodoAppContext } from '../../contexts/todo-app.context';\nimport TodoInput from '../todo-Input/TodoInput'\nimport ListOfTodos from '../list-of-todos/ListOfTodos';\nimport FilterButtons from '../buttons-components/filter-buttons/FilterButtons';\n// import { FilterValuesType, TaskType } from '../../global-type';\nimport styled from './todo-app.module.css'\nimport { ListOfTodosContext } from '../../contexts/ListOfTodos.context';\n\n// type TodoAppPropsType = {};\n\n\nconst TodoApp = () => {\n\n\tconst { \n\t\tremoveTask, \n\t\t// changeStatus,\n        filter,\n\t\tchangeFilter,\n\t\tfilteredTasks,\n\t\tonKeyPressHandler,\n\t\teditTodo,\n\t} = useContext(TodoAppContext);\n\n\tconst { changeStatus } = useContext(ListOfTodosContext)\n  return (\n    <div className={styled.wrapper}>\n        \n        <h1 className={styled.title}>{\"My Todo List\"}</h1>\n\n        <section className={styled.todoInputSec}>\n            <TodoInput />\n        </section>\n\n\t\t<section className={styled.todosSec}>\n\t\t\t<div className={styled.todos}>\n\t\t\t\t{filteredTasks.map((taska) => {\n\n\t\t\t\t\tconst onChangeHandler = (\n\t\t\t\t\t\te\n\t\t\t\t\t) => {\n\t\t\t\t\t\tchangeStatus(taska.id, e.currentTarget.checked);                    \n\t\t\t\t\t};\n\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ListOfTodos \n\t\t\t\t\t\t\tkey={taska.id}\n\t\t\t\t\t\t\ttitle={taska.title}\n\t\t\t\t\t\t\tid={taska.id}\n\t\t\t\t\t\t\tisDone={taska.isDone}\n\t\t\t\t\t\t\tremoveTask={() => removeTask(taska.id)} \n\t\t\t\t\t\t\tonChange={onChangeHandler}\n\t\t\t\t\t\t\teditTodo={editTodo}\n\t\t\t\t\t\t\tonChangeHandler={onChangeHandler}\n\t\t\t\t\t\t\tchecked={taska.isDone}\n\t\t\t\t\t\t\tonKeyPressHandler={onKeyPressHandler}\n\t\t\t\t\t\t\tfilter={filter}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</section>\n\t\t\n        <FilterButtons \n\t\t\tfilter={filter}\n\t\t\tfilteredTasks={filteredTasks}\n\t\t\tchangeFilter={changeFilter}\n\t\t\t />\n    </div>\n  )\n}\n\nexport default TodoApp;\n"],"mappings":";;AAAA,OAAOA,KAAK;AACX;AACA;AACA;AACAC,UAAU,QACJ,OAAO;AAEd,SAASC,cAAc,QAAQ,iCAAiC;AAChE,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,WAAW,MAAM,8BAA8B;AACtD,OAAOC,aAAa,MAAM,oDAAoD;AAC9E;AACA,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,SAASC,kBAAkB,QAAQ,oCAAoC;;AAEvE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAErB,MAAM;IACLC,UAAU;IACV;IACMC,MAAM;IACZC,YAAY;IACZC,aAAa;IACbC,iBAAiB;IACjBC;EACD,CAAC,GAAGhB,UAAU,CAACC,cAAc,CAAC;EAE9B,MAAM;IAAEgB;EAAa,CAAC,GAAGjB,UAAU,CAACM,kBAAkB,CAAC;EACtD,oBACEE,OAAA;IAAKU,SAAS,EAAEb,MAAM,CAACc,OAAQ;IAAAC,QAAA,gBAE3BZ,OAAA;MAAIU,SAAS,EAAEb,MAAM,CAACgB,KAAM;MAAAD,QAAA,EAAE;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eAElDjB,OAAA;MAASU,SAAS,EAAEb,MAAM,CAACqB,YAAa;MAAAN,QAAA,eACpCZ,OAAA,CAACN,SAAS;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACP,eAEhBjB,OAAA;MAASU,SAAS,EAAEb,MAAM,CAACsB,QAAS;MAAAP,QAAA,eACnCZ,OAAA;QAAKU,SAAS,EAAEb,MAAM,CAACuB,KAAM;QAAAR,QAAA,EAC3BN,aAAa,CAACe,GAAG,CAAEC,KAAK,IAAK;UAE7B,MAAMC,eAAe,GACpBC,CAAC,IACG;YACJf,YAAY,CAACa,KAAK,CAACG,EAAE,EAAED,CAAC,CAACE,aAAa,CAACC,OAAO,CAAC;UAChD,CAAC;UAGD,oBACC3B,OAAA,CAACL,WAAW;YAEXkB,KAAK,EAAES,KAAK,CAACT,KAAM;YACnBY,EAAE,EAAEH,KAAK,CAACG,EAAG;YACbG,MAAM,EAAEN,KAAK,CAACM,MAAO;YACrBzB,UAAU,EAAEA,CAAA,KAAMA,UAAU,CAACmB,KAAK,CAACG,EAAE,CAAE;YACvCI,QAAQ,EAAEN,eAAgB;YAC1Bf,QAAQ,EAAEA,QAAS;YACnBe,eAAe,EAAEA,eAAgB;YACjCI,OAAO,EAAEL,KAAK,CAACM,MAAO;YACtBrB,iBAAiB,EAAEA,iBAAkB;YACrCH,MAAM,EAAEA;UAAO,GAVVkB,KAAK,CAACG,EAAE;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAWZ;QAEJ,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IACG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACG,eAEJjB,OAAA,CAACJ,aAAa;MACnBQ,MAAM,EAAEA,MAAO;MACfE,aAAa,EAAEA,aAAc;MAC7BD,YAAY,EAAEA;IAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACxB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACI;AAEV,CAAC;AAAAf,EAAA,CA3DKD,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AA6Db,eAAeA,OAAO;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}