{"ast":null,"code":"var _jsxFileName = \"/Users/olek/Desktop/Coding/todo-list-with-context/src/components/todo-app/TodoApp.jsx\",\n  _s = $RefreshSig$();\nimport React, { ChangeEvent, KeyboardEvent, useEffect, useState } from 'react';\nimport TodoInput from '../todo-Input/TodoInput';\nimport ListOfTodos from '../list-of-todos/ListOfTodos';\nimport FilterButtons from '../buttons-components/filter-buttons/FilterButtons';\n\n// import { FilterValuesType, TaskType } from '../../global-type';\nimport { v1 } from 'uuid';\nimport styled from './todo-app.module.css';\n\n// type TodoAppPropsType = {};\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoApp = () => {\n  _s();\n  const getLocalstorage = () => {\n    let taska = window.localStorage.getItem(\"tasks\");\n    console.log(taska);\n    if (taska) {\n      return taska = JSON.parse(localStorage.getItem('tasks') || '[]');\n    } else {\n      return [];\n    }\n  };\n  let [tasks, setTasks] = useState < Array < TaskType >> getLocalstorage();\n  const [filter, setFilter] = useState(\"all\");\n  const [value, setValue] = useState(\"\");\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    if (tasks.length !== 0) {\n      localStorage.setItem('tasks', JSON.stringify(tasks));\n    } else {\n      localStorage.setItem('tasks', JSON.stringify([]));\n    }\n    setTasks(tasks);\n  }, [tasks]);\n  const handelInput = text => {\n    setValue(text);\n  };\n  const addTask = () => {\n    const newTask = {\n      id: v1(),\n      title: value,\n      isDone: false,\n      isEditing: false\n    };\n    if (newTask.title.trim() === \"\") {\n      return;\n    } else {\n      let newTasks = [newTask, ...tasks];\n      setTasks(newTasks);\n      setValue(\"\");\n    }\n  };\n  const removeTask = id => {\n    const filteredTask = tasks.filter(t => t.id !== id);\n    if (window.confirm('Are you sure?')) {\n      setTasks(filteredTask);\n    }\n  };\n  const changeStatus = (taskId, isDone) => {\n    const task = tasks.find(t => t.id === taskId);\n    if (task) {\n      task.isDone = !task.isDone;\n    }\n    setTasks([...tasks]);\n  };\n  const editTodo = (id, title) => {\n    const editingTask = tasks.map(task => ({\n      ...task,\n      title: task.id === id ? title : task.title\n    }));\n    setTasks([...editingTask]);\n  };\n  const inputHandler = e => {\n    handelInput(e.target.value);\n  };\n  const addTaskHandler = () => {\n    if (value) {\n      addTask();\n    } else {\n      setError(true);\n    }\n  };\n  const onKeyPressHandler = e => {\n    setError(null);\n    if (e.key === \"Enter\" && value) {\n      addTask();\n    }\n  };\n  let filteredTasks = tasks;\n  if (filter === 'active') {\n    filteredTasks = tasks.filter(t => t.isDone === false);\n  } else if (filter === 'completed') {\n    filteredTasks = tasks.filter(t => t.isDone === true);\n  }\n  function changeFilter(value) {\n    setFilter(value);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styled.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styled.title,\n      children: \"My Todo List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styled.todoInputSec,\n      children: /*#__PURE__*/_jsxDEV(TodoInput, {\n        id: v1(),\n        value: value,\n        inputHandler: inputHandler,\n        onKeyPressHandler: onKeyPressHandler,\n        error: error,\n        addTaskHandler: addTaskHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: styled.todosSec,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styled.todos,\n        children: filteredTasks.map(taska => {\n          const onChangeHandler = e => {\n            changeStatus(taska.id, e.currentTarget.checked);\n          };\n          return /*#__PURE__*/_jsxDEV(ListOfTodos, {\n            title: taska.title,\n            id: taska.id,\n            isDone: taska.isDone,\n            removeTask: () => removeTask(taska.id),\n            onChange: onChangeHandler,\n            editTodo: editTodo,\n            onChangeHandler: onChangeHandler,\n            checked: taska.isDone,\n            onKeyPressHandler: onKeyPressHandler,\n            filter: filter\n          }, taska.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 7\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 4\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(FilterButtons, {\n      filter: filter,\n      filteredTasks: filteredTasks,\n      changeFilter: changeFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoApp, \"9kCdtTOHBAVyQZ+efiY7DcsOQEQ=\");\n_c = TodoApp;\nexport default TodoApp;\nvar _c;\n$RefreshReg$(_c, \"TodoApp\");","map":{"version":3,"names":["React","ChangeEvent","KeyboardEvent","useEffect","useState","TodoInput","ListOfTodos","FilterButtons","v1","styled","jsxDEV","_jsxDEV","TodoApp","_s","getLocalstorage","taska","window","localStorage","getItem","console","log","JSON","parse","tasks","setTasks","Array","TaskType","filter","setFilter","value","setValue","error","setError","length","setItem","stringify","handelInput","text","addTask","newTask","id","title","isDone","isEditing","trim","newTasks","removeTask","filteredTask","t","confirm","changeStatus","taskId","task","find","editTodo","editingTask","map","inputHandler","e","target","addTaskHandler","onKeyPressHandler","key","filteredTasks","changeFilter","className","wrapper","children","fileName","_jsxFileName","lineNumber","columnNumber","todoInputSec","todosSec","todos","onChangeHandler","currentTarget","checked","onChange","_c","$RefreshReg$"],"sources":["/Users/olek/Desktop/Coding/todo-list-with-context/src/components/todo-app/TodoApp.jsx"],"sourcesContent":["import React, { \n\tChangeEvent, \n\tKeyboardEvent, \n\tuseEffect, \n\tuseState,\n} from 'react'\n\n\nimport TodoInput from '../todo-Input/TodoInput'\nimport ListOfTodos from '../list-of-todos/ListOfTodos';\nimport FilterButtons from '../buttons-components/filter-buttons/FilterButtons';\n\n// import { FilterValuesType, TaskType } from '../../global-type';\nimport { v1 } from 'uuid';\nimport styled from './todo-app.module.css'\n\n// type TodoAppPropsType = {};\n\n\nconst TodoApp = () => {\n\t\n\tconst getLocalstorage = () => {\n\t\tlet taska = window.localStorage.getItem(\"tasks\");\n\n\t\tconsole.log(taska);\n\t\tif(taska) {\n\t\t\treturn (taska = JSON.parse(localStorage.getItem('tasks') || '[]'));\n\t\t} else { \n\t\t\treturn [] \n\t\t}\n\t\t\n\t}\n\t\n\tlet [tasks, setTasks] = useState<Array<TaskType>>(getLocalstorage());\n\n\tconst [filter, setFilter] = useState(\"all\");\n\tconst [value, setValue] = useState(\"\");\n\tconst [error, setError] = useState(null);\n\n\tuseEffect(() => {\n\t\tif(tasks.length !== 0) {\n\t\t\tlocalStorage.setItem('tasks', JSON.stringify(tasks));\n\t\t} else {\n\t\t\tlocalStorage.setItem('tasks', JSON.stringify([]));\n\t\t}\n\t\tsetTasks(tasks);\n\t}, [tasks]);\n\n\t\n\n\n\tconst handelInput = (text) => {\n\t\tsetValue(text);\n\t};\n\n\tconst addTask = () => {\n\t\tconst newTask = {\n\t\t\tid: v1(),\n\t\t\ttitle: value,\n\t\t\tisDone: false,\n\t\t\tisEditing: false,\n\t\t};\n\n\t\tif (newTask.title.trim() === \"\") {\n\t\t\treturn;\n\t\t} else {\n\t\t\tlet newTasks = [newTask, ...tasks];\n\t\t\tsetTasks(newTasks);\n\t\t\tsetValue(\"\");\n\t\t}\n\t};\n\n\tconst removeTask = (id) => {\n\t\tconst filteredTask = tasks.filter((t) => t.id !== id);\n        if(window.confirm('Are you sure?')) {\n            setTasks(filteredTask);\n        }\n\t};\n\n\tconst changeStatus = (taskId, isDone) => {\n\t\tconst task = tasks.find((t) => t.id === taskId);\n            if (task) {\n                task.isDone = !task.isDone;\n            }\n\t\tsetTasks([...tasks]);\n\t};\n\n\n\tconst editTodo = (id, title) => {\n\t\tconst editingTask = tasks.map((task) => ({\n            ...task,\n            title: task.id === id ? title : task.title\n            })\n\t    );\n\t\tsetTasks([...editingTask]);\n    };\n\n\tconst inputHandler = (e) => {\n\t\thandelInput(e.target.value);\n\t};\n\n\tconst addTaskHandler = () => {\n\t\tif (value) {\n\t\t\taddTask();\n\t\t} else {\n\t\t\tsetError(true);\n\t\t}\n\t};\n\n\tconst onKeyPressHandler = (e) => {\n\t\tsetError(null);\n\t\tif (e.key === \"Enter\" && value) {\n\t\t\taddTask();\n\t\t}\n\t};\n\n        let filteredTasks = tasks;\n        if(filter === 'active') {\n            filteredTasks = tasks.filter(t => t.isDone === false);\n\t\t} else if (filter === 'completed') {\n\t\t    filteredTasks = tasks.filter(t => t.isDone === true);\n\t\t}\n\n\t\tfunction changeFilter(value) {\n\t\t\tsetFilter(value);\n\t\t}\n\n  return (\n    <div className={styled.wrapper}>\n        \n        <h1 className={styled.title}>{\"My Todo List\"}</h1>\n\n        <section className={styled.todoInputSec}>\n            <TodoInput\n\t\t\t\tid={v1()}\n\t\t\t\tvalue={value}\n\t\t\t\tinputHandler={inputHandler}\n\t\t\t\tonKeyPressHandler={onKeyPressHandler}\n\t\t\t\terror={error}\n\t\t\t\taddTaskHandler={addTaskHandler}\n\t\t\t\t/>\n        </section>\n\n\t\t<section className={styled.todosSec}>\n\t\t\t<div className={styled.todos}>\n\t\t\t\t{filteredTasks.map((taska) => {\n\n\t\t\t\t\tconst onChangeHandler = (\n\t\t\t\t\t\te\n\t\t\t\t\t) => {\n\t\t\t\t\t\tchangeStatus(taska.id, e.currentTarget.checked);                    \n\t\t\t\t\t};\n\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ListOfTodos \n\t\t\t\t\t\t\tkey={taska.id}\n\t\t\t\t\t\t\ttitle={taska.title}\n\t\t\t\t\t\t\tid={taska.id}\n\t\t\t\t\t\t\tisDone={taska.isDone}\n\t\t\t\t\t\t\tremoveTask={() => removeTask(taska.id)} \n\t\t\t\t\t\t\tonChange={onChangeHandler}\n\t\t\t\t\t\t\teditTodo={editTodo}\n\t\t\t\t\t\t\tonChangeHandler={onChangeHandler}\n\t\t\t\t\t\t\tchecked={taska.isDone}\n\t\t\t\t\t\t\tonKeyPressHandler={onKeyPressHandler}\n\t\t\t\t\t\t\tfilter={filter}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</section>\n\t\t\n        <FilterButtons \n\t\t\tfilter={filter}\n\t\t\tfilteredTasks={filteredTasks}\n\t\t\tchangeFilter={changeFilter}\n\t\t\t />\n    </div>\n  )\n}\n\nexport default TodoApp;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}