{"ast":null,"code":"export const INPUT_ACTION_TYPES = {\n  SET_INPUT_VALUE: 'SET_INPUT_VALUE',\n  SET_INPUT_ERROR: 'SET_INPUT_ERROR'\n};\nexport const INPUT_INITIAL_STATE = {\n  value: '',\n  error: false\n};\n\n// type payloadValue = {\n//     type: number\n//     value: string\n// }\n// type payloadError = {\n//     type: number\n//     error: string\n// }\nexport const inputReducer = (state, action) => {\n  const {\n    type,\n    payload\n  } = action;\n  // console.log(action);\n\n  switch (type) {\n    case INPUT_ACTION_TYPES.SET_INPUT_VALUE:\n      return {\n        ...state,\n        value: payload\n      };\n    case INPUT_ACTION_TYPES.SET_INPUT_ERROR:\n      return {\n        ...state,\n        error: payload\n      };\n    default:\n      {\n        throw new Error(`Unexpected type of ${type}`);\n      }\n  }\n};","map":{"version":3,"names":["INPUT_ACTION_TYPES","SET_INPUT_VALUE","SET_INPUT_ERROR","INPUT_INITIAL_STATE","value","error","inputReducer","state","action","type","payload","Error"],"sources":["/Users/olek/Desktop/Coding/todo-list-with-contextAndReducers/src/reducers/todo-input.reducer.tsx"],"sourcesContent":["\n\nexport const INPUT_ACTION_TYPES = {\n    SET_INPUT_VALUE: 'SET_INPUT_VALUE',\n    SET_INPUT_ERROR: 'SET_INPUT_ERROR'\n}\n\nexport const INPUT_INITIAL_STATE = {\n    value: '',\n    error: false\n}\n\ntype StateType = {\n    value: string,\n    error: boolean\n}\n\n// type payloadValue = {\n//     type: number\n//     value: string\n// }\n// type payloadError = {\n//     type: number\n//     error: string\n// }\ntype ActionType = {\n    type: string,\n    payload: any\n}\n\nexport const inputReducer = (state: StateType, action: ActionType) => {\n    const { type, payload } = action;\n    // console.log(action);\n    \n    switch(type) {\n        case INPUT_ACTION_TYPES.SET_INPUT_VALUE :\n        return {\n            ...state,\n            value: payload\n        }\n        case INPUT_ACTION_TYPES.SET_INPUT_ERROR :\n            return {\n                ...state,\n                error: payload\n            }\n            default: {\n                throw new Error(`Unexpected type of ${type}`)\n            }\n    }\n}"],"mappings":"AAEA,OAAO,MAAMA,kBAAkB,GAAG;EAC9BC,eAAe,EAAE,iBAAiB;EAClCC,eAAe,EAAE;AACrB,CAAC;AAED,OAAO,MAAMC,mBAAmB,GAAG;EAC/BC,KAAK,EAAE,EAAE;EACTC,KAAK,EAAE;AACX,CAAC;;AAOD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA,OAAO,MAAMC,YAAY,GAAGA,CAACC,KAAgB,EAAEC,MAAkB,KAAK;EAClE,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAChC;;EAEA,QAAOC,IAAI;IACP,KAAKT,kBAAkB,CAACC,eAAe;MACvC,OAAO;QACH,GAAGM,KAAK;QACRH,KAAK,EAAEM;MACX,CAAC;IACD,KAAKV,kBAAkB,CAACE,eAAe;MACnC,OAAO;QACH,GAAGK,KAAK;QACRF,KAAK,EAAEK;MACX,CAAC;IACD;MAAS;QACL,MAAM,IAAIC,KAAK,CAAE,sBAAqBF,IAAK,EAAC,CAAC;MACjD;EAAC;AAEb,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}